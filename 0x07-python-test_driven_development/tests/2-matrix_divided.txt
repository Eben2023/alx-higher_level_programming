>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

>>> matrix_divided([[3]], 3)
[[1.0]]
>>> matrix_divided([[3, 9], [12, 15]], -3)
[[-1.0, -3.0], [-4.0, -5.0]]
>>> matrix_divided([[3, 9], [12, 15]], 0)
Traceback (most recent call last):
    ...
ZeroDivisionError: division by zero
>>> matrix_divided([[3, 9], [12, 15, 3]], 3)
Traceback (most recent call last):
    ...
TypeError: All rows of the matrix must have the same size
>>> matrix_divided([[3, "9"], [15, 3]], 3)
Traceback (most recent call last):
    ...
TypeError: The matrix must be a list of lists
>>> matrix_divided([[3, 9], [12, 15]], 3)
[[1.0, 3.0], [4.0, 5.0]]
>>> matrix_divided([[3, 9], [12, 15]], '3')
Traceback (most recent call last):
    ...
TypeError: The divisor must be a numeric value
>>> matrix_divided([[3, 9], [12, 15]], 0)
Traceback (most recent call last):
    ...
ZeroDivisionError: The divisor cannot be zero
>>> matrix_divided([3, 9], 3)
Traceback (most recent call last):
    ...
TypeError: The matrix must be a list of lists
>>> matrix_divided([[3, 9], [12, 15, 3]], 3)
Traceback (most recent call last):
    ...
TypeError: All rows of the matrix must have the same size
>>> matrix_divided([[3, 9], [12, 15]], float('inf'))
[[0.0, 0.0], [0.0, 0.0]]
>>> matrix_divided([[3, 9], [float('inf'), 15]], 3)
Traceback (most recent call last):
    ...
TypeError: The matrix must be a list of lists
>>> matrix_divided([[3, 9], [float('inf'), 15]], float('inf'))
Traceback (most recent call last):
    ...
TypeError: The matrix must be a list of lists
>>> matrix_divided([[3, 9], [12, 15]])
Traceback (most recent call last):
    ...
TypeError: matrix_divided() missing 1 required positional argument: 'div'
>>> matrix_divided()
Traceback (most recent call last):
    ...
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'
